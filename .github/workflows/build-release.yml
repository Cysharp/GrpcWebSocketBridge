name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag: git tag you want create. (sample 1.0.0)"
        required: true
      dry-run:
        description: "dry-run: true will never create relase/nuget."
        required: true
        default: false
        type: boolean

jobs:
  update-packagejson:
    uses: Cysharp/Actions/.github/workflows/update-packagejson.yaml@main
    with:
      file-path: ./src/GrpcWebSocketBridge.Client.Unity/Assets/Plugins/GrpcWebSocketBridge/package.json
      tag: ${{ inputs.tag }}
      dry-run: ${{ inputs.dry-run }}

  build:
    name: "Build & pack GrpcWebSocketBridge"
    runs-on: ubuntu-latest
    needs: [update-packagejson]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      # Build & Pack
      - run: dotnet build ./src/GrpcWebSocketBridge.AspNetCore/ -c Release -p:VersionSuffix=${{ inputs.tag }}
      - run: dotnet build ./src/GrpcWebSocketBridge.Client/ -c Release -p:VersionSuffix=${{ inputs.tag }}
      - run: dotnet pack -c Release --include-symbols --include-source --no-build -p:VersionPrefix=${{ inputs.tag }} -o ./publish/
      - uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: ./publish/

  build-grpc-dotnet:
    name: "Build & publish Grpc.Net.Client for Unity WebGL"
    runs-on: ubuntu-latest
    needs: [update-packagejson]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      # Build & Publish
      - run: dotnet publish -f netstandard2.0 -c Release -o ./publish/Grpc.Net.Client-ModifiedForWebGL/Grpc.Net.Client/netstandard2.0/ ./src/External/Grpc.Net.Client
      - run: dotnet publish -f netstandard2.1 -c Release -o ./publish/Grpc.Net.Client-ModifiedForWebGL/Grpc.Net.Client/netstandard2.1/ ./src/External/Grpc.Net.Client
      - run: zip -r ./Grpc.Net.Client-ModifiedForWebGL.${{ inputs.tag }}.zip ./Grpc.Net.Client-ModifiedForWebGL/
        working-directory: ./publish/
      - uses: actions/upload-artifact@v4
        with:
          name: Grpc.Net.Client-ModifiedForWebGL.${{ inputs.tag }}.zip
          path: ./publish/Grpc.Net.Client-ModifiedForWebGL.${{ inputs.tag }}.zip

  build-unity:
    name: "Build Unity package"
    needs: [update-packagejson]
    strategy:
      matrix:
        unity: ["2021.3.22f1"]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.update-packagejson.outputs.sha }}
      # execute scripts/Export Package
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
      - name: Export unitypackage
        uses: Cysharp/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_PACKAGE_VERSION: ${{ inputs.tag }}
        with:
          projectPath: src/GrpcWebSocketBridge.Client.Unity
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneWindows
          buildMethod: PackageExporter.Export

      - uses: Cysharp/Actions/.github/actions/check-metas@main # check meta files
        with:
          directory: src/GrpcWebSocketBridge.Client.Unity

      # Store artifacts.
      - uses: actions/upload-artifact@v4
        with:
          name: GrpcWebSocketBridge.${{ inputs.tag }}.unitypackage
          path: ./src/GrpcWebSocketBridge.Client.Unity/GrpcWebSocketBridge.${{ inputs.tag }}.unitypackage

  # release
  create-release:
    needs: [update-packagejson, build, build-grpc-dotnet, build-unity]
    uses: Cysharp/Actions/.github/workflows/create-release.yaml@main
    with:
      commit-id: ${{ needs.update-packagejson.outputs.sha }}
      dry-run: ${{ inputs.dry-run }}
      tag: ${{ inputs.tag }}
      nuget-push: true
      release-upload: true
      release-asset-path: |
        ./Grpc.Net.Client-ModifiedForWebGL.${{ inputs.tag }}.zip/Grpc.Net.Client-ModifiedForWebGL.${{ inputs.tag }}.zip
        ./GrpcWebSocketBridge.${{ inputs.tag }}.unitypackage/GrpcWebSocketBridge.${{ inputs.tag }}.unitypackage
      release-format: '{0}'
    secrets: inherit

  cleanup:
    if: ${{ needs.update-packagejson.outputs.is-branch-created == 'true' }}
    needs: [update-packagejson, create-release]
    uses: Cysharp/Actions/.github/workflows/clean-packagejson-branch.yaml@main
    with:
      branch: ${{ needs.update-packagejson.outputs.branch-name }}
